#!/bin/bash
#
# https://github.com/lanxuewsr/inexistence
# Author: Aniverse
#
script_update=2020.09.07
script_version=r10009

################################################################################################ Debug

usage_for_debug() {
    export local_packages=/etc/inexistence/00.Installation
    export s=$local_packages/package/transmission/configure
    rm -f $s ; nano $s
    bash /etc/inexistence/00.Installation/package/transmission/configure -u $iUser -p $iPass -w 9099
    bash <(wget -qO- https://github.com/lanxuewsr/inexistence/raw/master/00.Installation/package/transmission/configure)
}

################################################################################################ Get options

unset LogRootPath LogTimes DebLocation SCLocation LOCKLocation OutputLOG \
      iUser iPass iHome wPort iPort lang

AppName=Transmission
AppNameLower=transmission
Need_SourceCode=no
pm_action=configure

function show_usage() { echo "
$AppName $pm_action $script_version ($script_update)
Usage:
      -u        Username for $AppName
      -p        Password for $AppName
      -h        Specifiy user's home path
      -w        WebUI port for $AppName
      -i        Incoming port for $AppName
      -d        Enable debug mode
      -f        Force recover existing configuration
      --log     Show logfile's content"
exit 1 ; }

OPTS=$(getopt -a -o u:p:w:i:l:dhf --long "username:,password:,home:,wport:,iport:,lang:,logbase:,debug,log,help,force" -- "$@")
[ ! $? = 0 ] && show_usage
eval set -- "$OPTS"
while true; do
  case "$1" in
    -u | --username ) iUser="$2"    ; shift 2 ;;
    -p | --password ) iPass="$2"    ; shift 2 ;;
    -h | --home     ) iHome="$2"    ; shift 2 ;;
    -w | --wport    ) wPort="$2"    ; shift 2 ;;
    -i | --iport    ) iPort="$2"    ; shift 2 ;;
    -l | --lang     ) lang="$2"     ; shift 2 ;;
    -d | --debug    ) debug=1       ; shift   ;;
    -f | --force    ) force=1       ; shift   ;;
    -h | --help     ) show_usage    ; exit 0   ;  shift   ;;
         --log      ) show_log=1    ; shift   ;;
         --logbase  ) LogTimes="$2" ; shift 2 ;;
    -- ) shift 2 ; break ;;
     * ) break ;;
  esac
done

################################################################################################ Set Variables 1

if [[ -f /etc/inexistence/00.Installation/function ]]; then
    source /etc/inexistence/00.Installation/function
else
    source <(wget -qO- https://github.com/lanxuewsr/inexistence/raw/master/00.Installation/function)
fi

set_variables_log_location
check_var_OutputLOG
debug_log_location
cat_outputlog
check_var_iUser_iPass_iHome

################################################################################################ Set Variables 2

[[ -z $wPort ]] && wPort=9099
[[ -z $iPort ]] && iPort=52333  # Default: 51413 ?
PortCheck $wPort $iPort
[[ $port_used == 1 ]] && echo_error "Please change your port" && exit 1

tr_installed_ver=$(transmission-daemon --help | head -n1 | awk '{print $2}')

################################################################################################


function write_transmission_systemd() {
    cat << EOF > /etc/systemd/system/transmission@.service
[Unit]
Description=Transmission BitTorrent Daemon
After=network.target

[Service]
User=%I
Type=simple
LimitNOFILE=infinity
ExecStart=/usr/bin/transmission-daemon -f --log-error -e /home/%i/.config/transmission-daemon/transmission.log
# -g /home/%i/.config/transmission-daemon
ExecReload=/bin/kill -s HUP $MAINPID
ExecStop=/bin/kill -9 $MAINPID

[Install]
WantedBy=multi-user.target
EOF
    systemctl daemon-reload >> $OutputLOG 2>&1
}


function write_transmission_nginx_reverse_proxy() {
    # Currently this is only for the first non-root user
    if [[ -d /etc/nginx/apps ]] && [[ ! -f /etc/nginx/apps/transmission.conf ]]; then
        cat << EOF > /etc/nginx/apps/transmission.conf
location /tr {
  return 301 /transmission/web/;
}
location /transmission {
    proxy_read_timeout 300;
    proxy_pass_header  X-Transmission-Session-Id;
    proxy_set_header   X-Forwarded-Host   \$host;
    proxy_set_header   X-Forwarded-Server \$host;
    proxy_set_header   X-Forwarded-For    \$proxy_add_x_forwarded_for;
    proxy_pass         http://127.0.0.1:$wPort/transmission;
}
location /rpc {
    proxy_pass         http://127.0.0.1:$wPort/transmission/rpc;
}
location /upload {
    proxy_pass         http://127.0.0.1:$wPort/transmission/upload;
}
EOF
        nginx -s reload      >> "$OutputLOG" 2>&1
    fi
}


function write_transmission_settings() {
    cat << EOF > $iHome/.config/transmission-daemon/settings.json
{
    "alt-speed-down": 50, 
    "alt-speed-enabled": false, 
    "alt-speed-time-begin": 540, 
    "alt-speed-time-day": 127, 
    "alt-speed-time-enabled": false, 
    "alt-speed-time-end": 1020, 
    "alt-speed-up": 50, 
    "bind-address-ipv4": "0.0.0.0", 
    "bind-address-ipv6": "::", 
    "blocklist-enabled": false, 
    "blocklist-url": "http://www.example.com/blocklist",
    "cache-size-mb": 4, 
    "dht-enabled": false, 
    "download-dir": "$iHome/transmission/download", 
    "download-queue-enabled": false, 
    "download-queue-size": 99, 
    "encryption": 1, 
    "idle-seeding-limit": 1800, 
    "idle-seeding-limit-enabled": false, 
    "incomplete-dir": "$iHome/transmission/incomplete", 
    "incomplete-dir-enabled": false, 
    "lazy-bitfield-enabled": true, 
    "lpd-enabled": false, 
    "message-level": 2, 
    "open-file-limit": 100000, 
    "peer-limit-global": 10000, 
    "peer-limit-per-torrent": 5000, 
    "peer-port": $iPort, 
    "peer-port-random-high": 65535, 
    "peer-port-random-low": 49152, 
    "peer-port-random-on-start": true, 
    "peer-socket-tos": "default", 
    "pex-enabled": false, 
    "pidfile": "/$iHome/.config/transmission-daemon/transmission-daemon.pid", 
    "port-forwarding-enabled": true, 
    "preallocation": 1, 
    "prefetch-enabled": 1, 
    "proxy": "", 
    "proxy-auth-enabled": false, 
    "proxy-auth-password": "", 
    "proxy-auth-username": "", 
    "proxy-enabled": false, 
    "proxy-port": 80, 
    "proxy-type": 0, 
    "queue-stalled-enabled": false, 
    "queue-stalled-minutes": 300, 
    "ratio-limit": 99, 
    "ratio-limit-enabled": false, 
    "rename-partial-files": true, 
    "rpc-authentication-required": true, 
    "rpc-bind-address": "0.0.0.0", 
    "rpc-enabled": true, 
    "rpc-password": "$iPass", 
    "rpc-port": $wPort, 
    "rpc-url": "/transmission/", 
    "rpc-username": "$iUser", 
    "rpc-whitelist": "*.*.*.*", 
    "rpc-whitelist-enabled": false, 
    "scrape-paused-torrents-enabled": true, 
    "script-torrent-done-enabled": false, 
    "script-torrent-done-filename": "", 
    "seed-queue-enabled": false, 
    "seed-queue-size": 5000, 
    "speed-limit-down": 1024000, 
    "speed-limit-down-enabled": false, 
    "speed-limit-up": 1024000, 
    "speed-limit-up-enabled": false, 
    "start-added-torrents": true, 
    "trash-original-torrent-files": false, 
    "umask": 0, 
    "upload-slots-per-torrent": 2000, 
    "utp-enabled": false, 
    "watch-dir": "$iHome/transmission/watch", 
    "watch-dir-enabled": true
}

EOF
}


################################################################################################

function configure_transmission() {

    echo >> $OutputLOG

    backup_old_config transmission-daemon
    mkdir -p  $iHome/transmission/{download,torrent,watch}   $iHome/.config/transmission-daemon   $local_script   $PortLocation
    if [[ -f $local_packages/package/transmission/ttrr ]]; then
        ln -s  $local_packages/package/transmission/ttrr      $local_script/ttrr       >> $OutputLOG 2>&1
    else
        wget -nv https://github.com/lanxuewsr/inexistence/raw/master/00.Installation/package/transmission/ttrr -O $local_script/ttrr >> $OutputLOG 2>&1
        chmod +x $local_script/ttrr
    fi

    write_transmission_settings
    write_transmission_systemd
    write_transmission_nginx_reverse_proxy

    chmod -R 755             $iHome/transmission   $iHome/.config/transmission-daemon >> $OutputLOG 2>&1
    chown -R $iUser.$iUser   $iHome/transmission   $iHome/.config/transmission-daemon >> $OutputLOG 2>&1

    echo   $wPort   >    $PortLocation/$iUser.$AppNameLower
    systemctl enable transmission@$iUser >> $OutputLOG 2>&1
    systemctl start  transmission@$iUser >> $OutputLOG 2>&1
    sleep 2
    systemctl status transmission@$iUser >> $OutputLOG 2>&1
    [[ -d /var/www/h5ai/$iUser ]] && ln -s   $iHome/transmission/download   /var/www/h5ai/$iUser/transmission >> $OutputLOG 2>&1

    status_lock=$AppName-c
    echo "status_lock=$status_lock" > /tmp/Variables
    rm -f /tmp/$status_lock.1.lock /tmp/$status_lock.2.lock
    # full program name will not be displayed, so just transmiss not transmission-daemon
    ps --user $iUser | grep transmiss -q && touch /tmp/$status_lock.1.lock || touch /tmp/$status_lock.2.lock
    echo >> $OutputLOG

}



if [[ -d $iHome/.config/transmission-daemon ]] && [[ $force != 1 ]] ;then
    echo -e "Configuration for $iUser already exists, skip configuration ..."
else
    echo_task "Configuring $AppName ..."
    configure_transmission & spinner $!
    check_status $status_lock
fi
