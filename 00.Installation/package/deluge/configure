#!/bin/bash
#
# https://github.com/lanxuewsr/inexistence
# Author: Aniverse
#
script_update=2020.08.02
script_version=r10011

################################################################################################ Debug

usage_for_debug() {
    export local_packages=/etc/inexistence/00.Installation
    export s=$local_packages/package/deluge/configure
    rm -f $s ; nano $s
    bash /etc/inexistence/00.Installation/package/deluge/configure -u $iUser -p $iPass -w 8112 -i 58846
    bash <(wget -qO- https://github.com/lanxuewsr/inexistence/raw/master/00.Installation/package/deluge/configure)
}

################################################################################################ Get options

unset LogRootPath LogTimes DebLocation SCLocation LOCKLocation OutputLOG \
      iUser iPass iHome wPort iPort lang

AppName=Deluge
AppNameLower=deluge
Need_SourceCode=no
pm_action=configure

function show_usage() { echo "
$AppName $pm_action $script_version ($script_update)
Usage:
      -u        Username for $AppName
      -p        Password for $AppName
      -h        Specifiy user's home path
      -w        WebUI port for deluge-web
      -i        Daemon port for deluged
      -d        Enable debug mode
      -f        Force recover existing configuration
      --log     Show logfile's content"
exit 1 ; }

OPTS=$(getopt -a -o u:p:w:i:l:dhf --long "username:,password:,home:,wport:,iport:,lang:,logbase:,debug,log,help,force" -- "$@")
[ ! $? = 0 ] && show_usage
eval set -- "$OPTS"
while true; do
  case "$1" in
    -u | --username ) iUser="$2"    ; shift 2 ;;
    -p | --password ) iPass="$2"    ; shift 2 ;;
    -h | --home     ) iHome="$2"    ; shift 2 ;;
    -w | --wport    ) wPort="$2"    ; shift 2 ;;
    -i | --iport    ) iPort="$2"    ; shift 2 ;;
    -l | --lang     ) lang="$2"     ; shift 2 ;;
    -d | --debug    ) debug=1       ; shift   ;;
    -f | --force    ) force=1       ; shift   ;;
    -h | --help     ) show_usage    ; exit 0   ;  shift   ;;
         --log      ) show_log=1    ; shift   ;;
         --logbase  ) LogTimes="$2" ; shift 2 ;;
    -- ) shift 2 ; break ;;
     * ) break ;;
  esac
done

################################################################################################ Set Variables 1

if [[ -f /etc/inexistence/00.Installation/function ]]; then
    source /etc/inexistence/00.Installation/function
else
    source <(wget -qO- https://github.com/lanxuewsr/inexistence/raw/master/00.Installation/function)
fi

set_variables_log_location
check_var_OutputLOG
debug_log_location
cat_outputlog
add_local_script_to_PATH
check_var_iUser_iPass_iHome

################################################################################################ Set Variables 2

[[ -z $wPort ]] && wPort=8112
[[ -z $iPort ]] && iPort=58846

PortCheck $wPort $iPort
[[ $port_used == 1 ]] && echo_error "Please change your port" && exit 1
[[ -n $(which deluged) ]] && de_installed_ver=$(deluged --version 2>/dev/null | grep deluge | awk '{print $2}' | grep -oE "[0-9].[0-9].[0-9]")

################################################################################################

# Deluge Password Calculatation
cat << EOF > /tmp/deluge.userpass.py
#!/usr/bin/env python
import hashlib
import sys
password = sys.argv[1]
salt = sys.argv[2]
s = hashlib.sha1()
s.update(salt)
s.update(password)
print s.hexdigest()
EOF

# Deluge Hostlist ID Generator
cat << EOF > /tmp/deluge.addhost.py
#!/usr/bin/env python
import hashlib
import sys
import time
print hashlib.sha1(str(time.time())).hexdigest()
EOF

mkdir -p $inexistence_files/script

cat << 'EOF' > $inexistence_files/script/backup-log-deluged
#!/bin/bash
cp -f  $HOME/.config/deluge/deluged.log      $HOME/.config/deluge/logs/deluged.$(date "+%Y.%m.%d.%H.%M.%S").log      # 2>/dev/null
sleep 0
EOF

cat << 'EOF' > $inexistence_files/script/backup-log-deluge-web
#!/bin/bash
cp -f  $HOME/.config/deluge/deluge-web.log   $HOME/.config/deluge/logs/deluge-web.$(date "+%Y.%m.%d.%H.%M.%S").log   # 2>/dev/null
sleep 0
EOF

chmod +x $inexistence_files/script/backup-log-{deluged,deluge-web}

DWSALT=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -1)
DWP=$(python /tmp/deluge.userpass.py ${iPass} ${DWSALT})
DUDID=$(python /tmp/deluge.addhost.py)

################################################################################################



function write_deluge_systemd() {
    cat << EOF > /etc/systemd/system/deluged@.service
[Unit]
Description=Deluge Bittorrent Client Daemon
After=network.target

[Service]
Type=simple
User=%I
LimitNOFILE=infinity
ExecStartPre=$(which sudo) -u %I -H $inexistence_files/script/backup-log-deluged
ExecStart=/usr/bin/deluged -d -l /home/%I/.config/deluge/deluged.log -L info
ExecStop=/usr/bin/killall -w -s 9 /usr/bin/deluged
Restart=on-failure
TimeoutStopSec=20
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

    cat << EOF > /etc/systemd/system/deluge-web@.service
[Unit]
Description=Deluge Bittorrent Client Web Interface
After=network.target

[Service]
Type=simple
User=%I
ExecStartPre=$(which sudo) -u %I -H $inexistence_files/script/backup-log-deluge-web
ExecStart=/usr/bin/deluge-web -l /home/%I/.config/deluge/deluge-web.log -L info
ExecStop=/usr/bin/killall -w -s 9 /usr/bin/deluge-web
TimeoutStopSec=5
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF
    if version_ge $de_installed_ver 2.0 ; then
        sed -i "s/deluge-web -l/deluge-web -d -l/" /etc/systemd/system/deluge-web@.service
    fi
    systemctl daemon-reload >> $OutputLOG 2>&1
}


function write_deluge_nginx_reverse_proxy() {
    # Currently this is only for the first non-root user
    if [[ -d /etc/nginx/apps ]] && [[ ! -f /etc/nginx/apps/deluge.conf ]]; then
        cat << EOF > /etc/nginx/apps/deluge.conf
location /de {
    return 301 https://\$host/deluge;
}
location /deluge {
    proxy_pass http://127.0.0.1:$wPort/;
    proxy_set_header X-Deluge-Base "/deluge/";
    include /etc/nginx/conf.d/proxy;
    add_header X-Frame-Options SAMEORIGIN;
}
EOF
        nginx -s reload      >> "$OutputLOG" 2>&1
    fi
}


function write_deluge_core_conf() {
    cat << EOF > $iHome/.config/deluge/core.conf
{
  "file": 1, 
  "format": 1
}{
  "info_sent": 0.0, 
  "lsd": false, 
  "max_download_speed": -1.0, 
  "send_info": false, 
  "natpmp": true, 
  "move_completed_path": "$iHome/deluge/completed", 
  "peer_tos": "0x00", 
  "enc_in_policy": 1, 
  "queue_new_to_top": false, 
  "ignore_limits_on_local_network": true, 
  "rate_limit_ip_overhead": true, 
  "daemon_port": $iPort, 
  "torrentfiles_location": "$iHome/deluge/torrent", 
  "max_active_limit": -1, 
  "geoip_db_location": "/usr/share/GeoIP/GeoIP.dat", 
  "upnp": true, 
  "utpex": false, 
  "max_active_downloading": -1, 
  "max_active_seeding": -1, 
  "allow_remote": true, 
  "outgoing_ports": [
    0, 
    0
  ], 
  "enabled_plugins": [
    "Stats", 
    "ltConfig", 
    "TotalTraffic"
  ], 
  "max_half_open_connections": -1, 
  "download_location": "$iHome/deluge/download", 
  "compact_allocation": false, 
  "max_upload_speed": -1.0, 
  "plugins_location": "$iHome/.config/deluge/plugins", 
  "max_connections_global": -1, 
  "enc_prefer_rc4": true, 
  "cache_expiry": 60, 
  "dht": false, 
  "stop_seed_at_ratio": false, 
  "stop_seed_ratio": 2.0, 
  "max_download_speed_per_torrent": -1, 
  "prioritize_first_last_pieces": false, 
  "max_upload_speed_per_torrent": -1, 
  "auto_managed": true, 
  "enc_level": 2, 
  "copy_torrent_file": true, 
  "max_connections_per_second": -1, 
  "listen_ports": [
    6881, 
    6891
  ], 
  "max_connections_per_torrent": -1, 
  "del_copy_torrent_file": false, 
  "move_completed": false, 
  "autoadd_enable": true, 
  "proxies": {
    "peer": {
      "username": "", 
      "password": "", 
      "hostname": "", 
      "type": 0, 
      "port": 8080
    }, 
    "web_seed": {
      "username": "", 
      "password": "", 
      "hostname": "", 
      "type": 0, 
      "port": 8080
    }, 
    "tracker": {
      "username": "", 
      "password": "", 
      "hostname": "", 
      "type": 0, 
      "port": 8080
    }, 
    "dht": {
      "username": "", 
      "password": "", 
      "hostname": "", 
      "type": 0, 
      "port": 8080
    }
  }, 
  "dont_count_slow_torrents": true, 
  "add_paused": false, 
  "random_outgoing_ports": true, 
  "max_upload_slots_per_torrent": -1, 
  "new_release_check": false, 
  "enc_out_policy": 1, 
  "seed_time_ratio_limit": -1.0, 
  "remove_seed_at_ratio": false, 
  "autoadd_location": "$iHome/deluge/watch", 
  "max_upload_slots_global": -1, 
  "seed_time_limit": -1, 
  "cache_size": 32768, 
  "share_ratio_limit": -1.0, 
  "random_port": true, 
  "listen_interface": ""
}
EOF
}


function write_deluge_web_conf() {
    cat << EOF > $iHome/.config/deluge/web.conf
{
  "file": 1,
  "format": 1
}{
  "port": $wPort,
  "enabled_plugins": [
    "Stats", 
    "ltConfig", 
    "TotalTraffic"
  ],
  "pwd_sha1": "$DWP",
  "theme": "gray",
  "show_sidebar": true,
  "sidebar_show_zero": false,
  "pkey": "ssl/daemon.pkey",
  "https": false,
  "sessions": {},
  "base": "/",
  "pwd_salt": "$DWSALT",
  "show_session_speed": true,
  "first_login": false,
  "cert": "ssl/daemon.cert",
  "session_timeout": 36000,
  "default_daemon": "",
  "sidebar_multiple_filters": true
}
EOF
}


function write_deluge_hostlist_conf() {
cat << EOF > $iHome/.config/deluge/hostlist.conf.1.2
{
  "file": 1,
  "format": 1
}{
  "hosts": [
    [
      "${DUDID}",
      "127.0.0.1",
      ${iPort},
      "${iUser}",
      "${iPass}"
    ]
  ]
}
EOF
}


function deluge_download_plugins() {
    # https://dev.deluge-torrent.org/wiki/Plugins
    # autoremoveplus with Python3 and Deluge2 support: https://github.com/springjools/deluge-autoremoveplus/releases
    # https://bitbucket.org/bendikro/deluge-yarss-plugin/downloads/YaRSS2-2.1.4-py3.6.egg
    # https://github.com/Laharah/deluge-FileBotTool/releases
    # https://github.com/nicklan/Deluge-Pieces-Plugin/downloads
    if [[ ! -d $inexistence_files/deluge-plugins ]]; then
        mkdir -p $inexistence_files/deluge-plugins
        cd $inexistence_files/deluge-plugins
        list="ltConfig-2.0.0   reannounce-0.1-py3.7"
        for plugin in $list ; do
            wget -O ${plugin}.egg https://github.com/lanxuewsr/inexistence-files/raw/master/deluge.plugins/thirdparty-python3/${plugin}.egg     >> $OutputLOG 2>&1
        done
        list="AutoRemovePlus-0.6.1-py2.7   LabelPlus-0.3.2.2-py2.7   ltConfig-0.3.1-py2.7   Stats-0.3.2-py2.7   TotalTraffic-0.5-py2.7   YaRSS2-1.4.3-py2.7" #  NoFolder-0.2-py2.7   reannounce-0.1-py2.7
        for plugin in $list ; do
            wget -O ${plugin}.egg https://github.com/lanxuewsr/inexistence-files/raw/master/deluge.plugins/thirdparty-python2.7/${plugin}.egg   >> $OutputLOG 2>&1
        done
    fi
}


function deluge_get_plugins() {
    mkdir -p $iHome/.config/deluge/plugins
    cd $iHome/.config/deluge/plugins
    if version_ge $de_installed_ver 2.0 ; then
        list="ltConfig-2.0.0"
        for plugin in $list ; do
            cp -f $inexistence_files/deluge-plugins/${plugin}.egg .   >> $OutputLOG 2>&1
        done
    else
        list="AutoRemovePlus-0.6.1-py2.7   LabelPlus-0.3.2.2-py2.7   ltConfig-0.3.1-py2.7   Stats-0.3.2-py2.7   TotalTraffic-0.5-py2.7   YaRSS2-1.4.3-py2.7"   #  NoFolder-0.2-py2.7   reannounce-0.1-py2.7
        for plugin in $list ; do
            cp -f $inexistence_files/deluge-plugins/${plugin}.egg .   >> $OutputLOG 2>&1
        done
    fi
}


################################################################################################


function configure_deluge() {

    echo >> $OutputLOG

    backup_old_config deluge
    mkdir -p /home/$iUser/deluge/{download,torrent,watch}  $iHome/.config/deluge/logs   $local_script   $PortLocation

    if [[ -f $local_packages/package/deluge/ddee ]]; then
        ln -s  $local_packages/package/deluge/ddee      $local_script/ddee       >> $OutputLOG 2>&1
        ln -s  $local_packages/package/deluge/ddww      $local_script/ddww       >> $OutputLOG 2>&1
    else
        wget -nv https://github.com/lanxuewsr/inexistence/raw/master/00.Installation/package/deluge/ddee -O $local_script/ddee >> $OutputLOG 2>&1
        chmod +x $local_script/ddee
        wget -nv https://github.com/lanxuewsr/inexistence/raw/master/00.Installation/package/deluge/ddee -O $local_script/ddww >> $OutputLOG 2>&1
        chmod +x $local_script/ddww
    fi

    deluge_download_plugins
    deluge_get_plugins
    write_deluge_systemd
    write_deluge_core_conf
    write_deluge_web_conf
    write_deluge_hostlist_conf
    write_deluge_nginx_reverse_proxy
    echo "$iUser:$iPass:10" >> $iHome/.config/deluge/auth

    chmod -R 755             $iHome/deluge   $iHome/.config/deluge   >> $OutputLOG 2>&1
    chown -R $iUser.$iUser   $iHome/deluge   $iHome/.config/deluge   >> $OutputLOG 2>&1
    chmod    600             $iHome/.config/deluge/auth              >> $OutputLOG 2>&1

    echo  $wPort >  $PortLocation/$iUser.deluge-web
    echo  $iPort >  $PortLocation/$iUser.deluged
    systemctl enable deluged@$iUser    >> $OutputLOG 2>&1
    systemctl start  deluged@$iUser    >> $OutputLOG 2>&1
    systemctl enable deluge-web@$iUser >> $OutputLOG 2>&1
    systemctl start  deluge-web@$iUser >> $OutputLOG 2>&1
    sleep 2
    systemctl status deluge@$iUser     >> $OutputLOG 2>&1
    systemctl status deluge-web@$iUser >> $OutputLOG 2>&1
    [[ -d /var/www/h5ai/$iUser ]] && ln -s   $iHome/deluge/download   /var/www/h5ai/$iUser/deluge >> $OutputLOG 2>&1

    status_lock=$AppName-c
    echo "status_lock=$status_lock" > /tmp/Variables
    rm -f /tmp/$status_lock.1.lock /tmp/$status_lock.2.lock 
    ps --user $iUser | grep deluged -q && touch /tmp/$status_lock.1.lock || touch /tmp/$status_lock.2.lock
    echo >> $OutputLOG
}


################################################################################################


if [[ -d $iHome/.config/deluge ]] && [[ $force != 1 ]] ;then
    echo -e "Configuration for $iUser already exists, skip configuration ..."
else
    echo_task "Configuring $AppName ..."
    configure_deluge & spinner $!
    check_status $status_lock
fi
